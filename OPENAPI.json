openapi: 3.0.3
info:
  title: Video Editing Service API
  version: 2.0.0
  description: >
    A serverless video processing API that merges and edits videos using FFmpeg.
    Supports async jobs with progress, percent-based caption positioning, and local development via LocalStack.

servers:
  - url: your-api-endpoint
    description: Production API
  - url: http://localhost:8000
    description: Local development

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
        has_ffmpeg:
          type: boolean
        mount_path_exists:
          type: boolean
        version:
          type: string

    JobStatus:
      type: object
      properties:
        job_id:
          type: string
          example: a1b2c3d4
        status:
          type: string
          enum: [queued, processing, downloading, merging, uploading, completed, failed]
        progress:
          type: number
          minimum: 0
          maximum: 100
        timestamp:
          type: string
          example: "1695123456"
        metadata:
          type: object
          properties:
            download_url:
              type: string
              description: Presigned S3 URL for downloading result
            download_url_local:
              type: string
              description: LocalStack URL for local development
            video_urls:
              type: array
              items:
                type: string
            videos_count:
              type: integer
            normalized:
              type: integer
            completed_at:
              type: number

    AsyncResponse:
      type: object
      properties:
        accepted:
          type: boolean
          example: true
        job_id:
          type: string
          example: a1b2c3d4
        status_url:
          type: string
          example: https://api-endpoint/status/a1b2c3d4

    MergeRequest:
      type: object
      required: [operation, video_urls]
      properties:
        operation:
          type: string
          enum: [merge]
        video_urls:
          type: array
          items:
            type: string
          example: [
            "https://example.com/video1.mp4",
            "https://example.com/video2.mp4"
          ]

    CaptionRequest:
      type: object
      required: [operation, input, caption]
      properties:
        operation:
          type: string
          enum: [caption]
        input:
          type: object
          properties:
            url:
              type: string
        caption:
          type: object
          properties:
            text:
              type: string
              example: "Hello World!"
            size:
              type: integer
              example: 36
            color:
              type: string
              example: "white"
            position:
              oneOf:
                - type: string
                  enum: [top, bottom, center]
                - type: object
                  properties:
                    x:
                      type: integer
                      minimum: 0
                      maximum: 100
                      description: X position as percentage (0-100)
                    y:
                      type: integer
                      minimum: 0
                      maximum: 100
                      description: Y position as percentage (0-100)
                  example: {"x": 50, "y": 90}

    AudioRequest:
      type: object
      required: [operation, input, audio]
      properties:
        operation:
          type: string
          enum: [add-audio]
        input:
          type: object
          properties:
            url:
              type: string
        audio:
          type: object
          properties:
            url:
              type: string
            start:
              type: number
              example: 0
            volume:
              type: number
              example: 0.8
              minimum: 0
              maximum: 2

    WatermarkRequest:
      type: object
      required: [operation, input, watermark]
      properties:
        operation:
          type: string
          enum: [watermark]
        input:
          type: object
          properties:
            url:
              type: string
        watermark:
          type: object
          properties:
            url:
              type: string
            position:
              type: string
              enum: [top-left, top-right, bottom-left, bottom-right, center]
              example: top-right
            opacity:
              type: number
              minimum: 0
              maximum: 1
              example: 0.8
            scale:
              type: number
              minimum: 0.01
              maximum: 1
              example: 0.1

    OverlayRequest:
      type: object
      required: [operation, input, overlay]
      properties:
        operation:
          type: string
          enum: [overlay]
        input:
          type: object
          properties:
            url:
              type: string
        overlay:
          type: object
          properties:
            url:
              type: string
            position:
              type: object
              properties:
                x:
                  type: integer
                  description: X position in pixels
                y:
                  type: integer
                  description: Y position in pixels
              example: {"x": 30, "y": 30}
            size:
              type: object
              properties:
                width:
                  type: integer
                height:
                  type: integer
              example: {"width": 320, "height": 180}
            start:
              type: number
              description: Start time in seconds
              example: 5
            duration:
              type: number
              description: Duration in seconds
              example: 10

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
        job_id:
          type: string

paths:
  /:
    get:
      summary: Health check and API info
      responses:
        '200':
          description: API health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /process:
    post:
      summary: Submit video processing operation
      description: >
        Submit a video processing job. Returns 202 for async processing
        or 200 for sync processing (when queue is disabled).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/MergeRequest'
                - $ref: '#/components/schemas/CaptionRequest'
                - $ref: '#/components/schemas/AudioRequest'
                - $ref: '#/components/schemas/WatermarkRequest'
                - $ref: '#/components/schemas/OverlayRequest'
            examples:
              merge:
                summary: Merge multiple videos
                value:
                  operation: merge
                  video_urls:
                    - "https://example.com/video1.mp4"
                    - "https://example.com/video2.mp4"
              caption:
                summary: Add caption with percent positioning
                value:
                  operation: caption
                  input:
                    url: "https://example.com/video.mp4"
                  caption:
                    text: "Hello World!"
                    size: 36
                    color: "white"
                    position:
                      x: 50
                      y: 90
              watermark:
                summary: Add watermark
                value:
                  operation: watermark
                  input:
                    url: "https://example.com/video.mp4"
                  watermark:
                    url: "https://example.com/logo.png"
                    position: "top-right"
                    opacity: 0.8
                    scale: 0.1
      responses:
        '202':
          description: Job accepted for async processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncResponse'
        '200':
          description: Job completed synchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /status/{job_id}:
    get:
      summary: Poll job status and get download URL
      parameters:
        - in: path
          name: job_id
          required: true
          schema:
            type: string
          example: a1b2c3d4
      responses:
        '200':
          description: Job status with progress and download URL when completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
              examples:
                processing:
                  summary: Job in progress
                  value:
                    job_id: "a1b2c3d4"
                    status: "merging"
                    progress: 72.5
                    timestamp: "1695123456"
                    metadata:
                      video_urls: ["https://example.com/video1.mp4"]
                      videos_count: 2
                      normalized: 1
                completed:
                  summary: Job completed with download URL
                  value:
                    job_id: "a1b2c3d4"
                    status: "completed"
                    progress: 100
                    timestamp: "1695123456"
                    metadata:
                      download_url: "https://s3.../output.mp4?..."
                      download_url_local: "http://localhost:4566/..."
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
